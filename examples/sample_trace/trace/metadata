/* CTF 1.8 */

/* This was generated by a Babeltrace `sink.ctf.fs` component. */

trace {
	major = 1;
	minor = 8;
	uuid = "50fa60bc-7409-4511-a6d7-1c8eb1ac4aeb";
	byte_order = le;
	packet.header := struct {
		integer { size = 32; align = 8; base = x; } magic;
		integer { size = 8; align = 8; } uuid[16];
		integer { size = 64; align = 8; } stream_id;
		integer { size = 64; align = 8; } stream_instance_id;
	} align(8);
};

clock {
	name = rocm_clock;
	description = "ROCm profiler clock";
	freq = 1000000000;
	precision = 0;
	offset_s = 0;
	offset = 0;
	absolute = true;
};

stream {
	id = 0;
	packet.context := struct {
		integer { size = 64; align = 8; } packet_size;
		integer { size = 64; align = 8; } content_size;
		integer { size = 64; align = 8; map = clock.rocm_clock.value; } timestamp_begin;
		integer { size = 64; align = 8; map = clock.rocm_clock.value; } timestamp_end;
		integer { size = 64; align = 8; } packet_seq_num;
	} align(8);

	event.header := struct {
		integer { size = 64; align = 8; } id;
		integer { size = 64; align = 8; map = clock.rocm_clock.value; } timestamp;
	} align(8);
};

event {
	name = "hip_compiler_region_event_start";
	stream_id = 0;
	id = 15;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hip_compiler_region_event_end";
	stream_id = 0;
	id = 16;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hip_runtime_region_event_start";
	stream_id = 0;
	id = 12;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hsa_core_region_event_start";
	stream_id = 0;
	id = 18;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hsa_core_region_event_end";
	stream_id = 0;
	id = 19;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hsa_amd_ext_region_event_start";
	stream_id = 0;
	id = 21;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "hsa_amd_ext_region_event_end";
	stream_id = 0;
	id = 22;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "memory_allocation_event_start";
	stream_id = 0;
	id = 9;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _allocation_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _allocation_type;
		string { encoding = UTF8; } _level;
		string { encoding = UTF8; } _agent_name;
		integer { size = 64; align = 8; signed = true; } _agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _agent_log_index;
		integer { size = 64; align = 8; signed = true; } _agent_type_index;
		string { encoding = UTF8; } _agent_type;
		integer { size = 64; align = 8; signed = true; } _address;
		integer { size = 64; align = 8; signed = true; } _size;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _queue_name;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		string { encoding = UTF8; } _stream_name;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "memory_allocation_event_end";
	stream_id = 0;
	id = 10;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _allocation_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _allocation_type;
		string { encoding = UTF8; } _level;
		string { encoding = UTF8; } _agent_name;
		integer { size = 64; align = 8; signed = true; } _agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _agent_log_index;
		integer { size = 64; align = 8; signed = true; } _agent_type_index;
		string { encoding = UTF8; } _agent_type;
		integer { size = 64; align = 8; signed = true; } _address;
		integer { size = 64; align = 8; signed = true; } _size;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _queue_name;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		string { encoding = UTF8; } _stream_name;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "hip_runtime_region_event_end";
	stream_id = 0;
	id = 13;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "marker_core_region_event_start";
	stream_id = 0;
	id = 24;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

event {
	name = "memory_copy_event_start";
	stream_id = 0;
	id = 6;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _copy_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _region_name;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _stream_name;
		string { encoding = UTF8; } _queue_name;
		integer { size = 64; align = 8; signed = true; } _size;
		string { encoding = UTF8; } _dst_device;
		integer { size = 64; align = 8; signed = true; } _dst_agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _dst_agent_log_index;
		integer { size = 64; align = 8; signed = true; } _dst_agent_type_index;
		string { encoding = UTF8; } _dst_agent_type;
		integer { size = 64; align = 8; signed = true; } _dst_address;
		string { encoding = UTF8; } _src_device;
		integer { size = 64; align = 8; signed = true; } _src_agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _src_agent_log_index;
		integer { size = 64; align = 8; signed = true; } _src_agent_type_index;
		string { encoding = UTF8; } _src_agent_type;
		integer { size = 64; align = 8; signed = true; } _src_address;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "memory_copy_event_end";
	stream_id = 0;
	id = 7;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _copy_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _region_name;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _stream_name;
		string { encoding = UTF8; } _queue_name;
		integer { size = 64; align = 8; signed = true; } _size;
		string { encoding = UTF8; } _dst_device;
		integer { size = 64; align = 8; signed = true; } _dst_agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _dst_agent_log_index;
		integer { size = 64; align = 8; signed = true; } _dst_agent_type_index;
		string { encoding = UTF8; } _dst_agent_type;
		integer { size = 64; align = 8; signed = true; } _dst_address;
		string { encoding = UTF8; } _src_device;
		integer { size = 64; align = 8; signed = true; } _src_agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _src_agent_log_index;
		integer { size = 64; align = 8; signed = true; } _src_agent_type_index;
		string { encoding = UTF8; } _src_agent_type;
		integer { size = 64; align = 8; signed = true; } _src_address;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "kernel_dispatch_event_start";
	stream_id = 0;
	id = 3;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _kernel_id;
		string { encoding = UTF8; } _guid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _category;
		string { encoding = UTF8; } _region;
		string { encoding = UTF8; } _name;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _agent_log_index;
		integer { size = 64; align = 8; signed = true; } _agent_type_index;
		string { encoding = UTF8; } _agent_type;
		integer { size = 64; align = 8; signed = true; } _code_object_id;
		integer { size = 64; align = 8; signed = true; } _kernel_symbol_id;
		integer { size = 64; align = 8; signed = true; } _dispatch_id;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _queue_name;
		string { encoding = UTF8; } _stream_name;
		integer { size = 64; align = 8; signed = true; } _grid_size_x;
		integer { size = 64; align = 8; signed = true; } _grid_size_y;
		integer { size = 64; align = 8; signed = true; } _grid_size_z;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_x;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_y;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_z;
		integer { size = 64; align = 8; signed = true; } _lds_size;
		integer { size = 64; align = 8; signed = true; } _scratch_size;
		integer { size = 64; align = 8; signed = true; } _static_lds_size;
		integer { size = 64; align = 8; signed = true; } _static_scratch_size;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "counter_collection_event";
	stream_id = 0;
	id = 55;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _id;
		string { encoding = UTF8; } _guid;
		integer { size = 64; align = 8; signed = true; } _dispatch_id;
		integer { size = 64; align = 8; signed = true; } _kernel_id;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _agent_id;
		integer { size = 64; align = 8; signed = true; } _agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _agent_log_index;
		integer { size = 64; align = 8; signed = true; } _agent_type_index;
		string { encoding = UTF8; } _agent_type;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		integer { size = 64; align = 8; signed = true; } _grid_size_x;
		integer { size = 64; align = 8; signed = true; } _grid_size_y;
		integer { size = 64; align = 8; signed = true; } _grid_size_z;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _kernel_region;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_x;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_y;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_z;
		integer { size = 64; align = 8; signed = true; } _lds_block_size;
		integer { size = 64; align = 8; signed = true; } _scratch_size;
		integer { size = 64; align = 8; signed = true; } _vgpr_count;
		integer { size = 64; align = 8; signed = true; } _accum_vgpr_count;
		integer { size = 64; align = 8; signed = true; } _sgpr_count;
		string { encoding = UTF8; } _counter_name;
		string { encoding = UTF8; } _counter_symbol;
		string { encoding = UTF8; } _component;
		string { encoding = UTF8; } _description;
		string { encoding = UTF8; } _block;
		string { encoding = UTF8; } _expression;
		string { encoding = UTF8; } _value_type;
		integer { size = 64; align = 8; signed = true; } _counter_id;
		floating_point { mant_dig = 53; exp_dig = 11; align = 8; } _value;
		integer { size = 64; align = 8; signed = true; } _start;
		integer { size = 64; align = 8; signed = true; } _end;
		integer { size = 64; align = 8; signed = true; } _is_constant;
		integer { size = 64; align = 8; signed = true; } _is_derived;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		string { encoding = UTF8; } _extdata;
		integer { size = 64; align = 8; signed = true; } _code_object_id;
	} align(8);
};

event {
	name = "kernel_dispatch_event_end";
	stream_id = 0;
	id = 4;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _kernel_id;
		string { encoding = UTF8; } _guid;
		integer { size = 64; align = 8; signed = true; } _tid;
		string { encoding = UTF8; } _category;
		string { encoding = UTF8; } _region;
		string { encoding = UTF8; } _name;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _agent_abs_index;
		integer { size = 64; align = 8; signed = true; } _agent_log_index;
		integer { size = 64; align = 8; signed = true; } _agent_type_index;
		string { encoding = UTF8; } _agent_type;
		integer { size = 64; align = 8; signed = true; } _code_object_id;
		integer { size = 64; align = 8; signed = true; } _kernel_symbol_id;
		integer { size = 64; align = 8; signed = true; } _dispatch_id;
		integer { size = 64; align = 8; signed = true; } _stream_id;
		integer { size = 64; align = 8; signed = true; } _queue_id;
		string { encoding = UTF8; } _queue_name;
		string { encoding = UTF8; } _stream_name;
		integer { size = 64; align = 8; signed = true; } _grid_size_x;
		integer { size = 64; align = 8; signed = true; } _grid_size_y;
		integer { size = 64; align = 8; signed = true; } _grid_size_z;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_x;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_y;
		integer { size = 64; align = 8; signed = true; } _workgroup_size_z;
		integer { size = 64; align = 8; signed = true; } _lds_size;
		integer { size = 64; align = 8; signed = true; } _scratch_size;
		integer { size = 64; align = 8; signed = true; } _static_lds_size;
		integer { size = 64; align = 8; signed = true; } _static_scratch_size;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
	} align(8);
};

event {
	name = "marker_core_region_event_end";
	stream_id = 0;
	id = 25;
	fields := struct {
		integer { size = 64; align = 8; signed = true; } _region_id;
		string { encoding = UTF8; } _guid;
		string { encoding = UTF8; } _name;
		string { encoding = UTF8; } _category;
		integer { size = 64; align = 8; signed = true; } _nid;
		integer { size = 64; align = 8; signed = true; } _pid;
		integer { size = 64; align = 8; signed = true; } _tid;
		integer { size = 64; align = 8; signed = true; } _event_id;
		integer { size = 64; align = 8; signed = true; } _stack_id;
		integer { size = 64; align = 8; signed = true; } _parent_stack_id;
		integer { size = 64; align = 8; signed = true; } _correlation_id;
		integer { size = 64; align = 8; signed = true; } _duration;
		string { encoding = UTF8; } _extdata;
		string { encoding = UTF8; } _call_stack;
		string { encoding = UTF8; } _line_info;
	} align(8);
};

